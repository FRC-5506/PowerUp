// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5506.PowerUp.subsystems;

import org.usfirst.frc5506.PowerUp.RobotMap;
import org.usfirst.frc5506.PowerUp.commands.*;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Elbow extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	//declare/instantiate motor controller for the elbow
	WPI_TalonSRX elbow = new WPI_TalonSRX(1);
	
	Joystick joystick = new Joystick(0);
	//this.joystick = OI.joystick;
	
    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
    	double yRotationPos = 0;//percentage of how hard motor controller will run
    	
    	if(!(joystick.getRawAxis(2)<.10))//if joystick is in center, don't get a new value
    	joystick.getRawAxis(2);//get a new value
    	else
    	yRotationPos = 0;//if a new value isn't taken, i.e. joystick is centered, the
    					//percentage becomes 0
    	
    	elbow.set(yRotationPos);
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void rotateUp() {
    }
}

